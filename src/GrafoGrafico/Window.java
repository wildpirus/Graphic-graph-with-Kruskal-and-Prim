/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GrafoGrafico;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 * JFrame interfaz para la representaci√≥n de grafos.
 * @author wildg
 */
public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    private GrafoG graph;
    private Vertice p1,p2;
       
    private double escala;
    private double en1 = 0;
    private String en0 = "";
    ImageIcon leftArrow = new ImageIcon("src/Sources/left-arrow.png");;
    ImageIcon rightArrow = new ImageIcon("src/Sources/right-arrow.png");
    ImageIcon confiB = new ImageIcon("src/Sources/settings.png");
    ImageIcon confiW = new ImageIcon("src/Sources/settings1.png");
    File savedFiles = new File("src/Files/sv.txt");
    Color background;
    Color foreground;
    
    //switches
    private int opc=-1;
    private boolean mostrarAllOptions=false;
    private boolean distanciaAuto;
    private boolean mostrarDistancias;
    int swGuardar = 0;
    
    public Window() {
        initComponents();
        background = Color.ORANGE;
        foreground = Color.BLACK;
        cambiarColor(background,foreground);
        graph= new GrafoG(this);
        optionsPanel.setVisible(false);
        addPanel.setVisible(false);
        aemPanel.setVisible(false);
        loadFrame.setBounds(60,60,790,579);
        loadFrame.setVisible(false);
        finalLoadPanel.setVisible(false);
        saveFrame.setBounds(80,80,400,219);
        saveFrame.setVisible(false);
        distanciaAuto = false;
        mostrarDistancias = true;
        escala = 1;
        mainFrame.setBounds(0,0,1216,715);
        mainFrame.setVisible(false);
        configFrame.setBounds(40,40,412,246);
        configFrame.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadFrame = new javax.swing.JFrame();
        loadBackgroundPanel = new javax.swing.JPanel();
        loadHeaderPanel = new javax.swing.JPanel();
        loadTitleLabel = new javax.swing.JLabel();
        loadBackLabel = new javax.swing.JLabel();
        loadInsLabel = new javax.swing.JLabel();
        finalLoadPanel = new javax.swing.JPanel();
        verticesScrollPane = new javax.swing.JScrollPane();
        verticesTable = new javax.swing.JTable();
        aristasScrollPane = new javax.swing.JScrollPane();
        aristasTable = new javax.swing.JTable();
        tableTitle1Label = new javax.swing.JLabel();
        tableTitle2Label = new javax.swing.JLabel();
        drawLoadGLabel = new javax.swing.JLabel();
        filesComboBox = new javax.swing.JComboBox<>();
        loadBuscarArchivoLabel = new javax.swing.JLabel();
        saveFrame = new javax.swing.JFrame();
        saveBackGroundPanel = new javax.swing.JPanel();
        saveHeaderPanel = new javax.swing.JPanel();
        saveTitleLabel = new javax.swing.JLabel();
        saveBackLabel = new javax.swing.JLabel();
        saveInsLabel = new javax.swing.JLabel();
        saveTextField = new javax.swing.JTextField();
        saveLabel = new javax.swing.JLabel();
        saveMsLabel = new javax.swing.JLabel();
        saveAvisoLabel = new javax.swing.JLabel();
        mainFrame = new javax.swing.JFrame();
        backGroundPanel = new javax.swing.JPanel();
        topBarPanel = new javax.swing.JPanel();
        allOptionsPanel = new javax.swing.JPanel();
        arrowLabel = new javax.swing.JLabel();
        optionsPanel = new javax.swing.JPanel();
        removeAristaLabel = new javax.swing.JLabel();
        addAristaLabel = new javax.swing.JLabel();
        removeVerticeLabel = new javax.swing.JLabel();
        addVerticeLabel = new javax.swing.JLabel();
        aemLabel = new javax.swing.JLabel();
        guardarGrafoLabel = new javax.swing.JLabel();
        cargarGrafoLabel = new javax.swing.JLabel();
        addPanel = new javax.swing.JPanel();
        entradaTextField = new javax.swing.JTextField();
        opAvisoLabel = new javax.swing.JLabel();
        inLabel = new javax.swing.JLabel();
        configPanel = new javax.swing.JPanel();
        configLabel = new javax.swing.JLabel();
        aemPanel = new javax.swing.JPanel();
        kruskalLabel = new javax.swing.JLabel();
        primLabel = new javax.swing.JLabel();
        mensajeScrollPane = new javax.swing.JScrollPane();
        mensajeLabel = new javax.swing.JLabel();
        mapPanel = new javax.swing.JPanel();
        configFrame = new javax.swing.JFrame();
        configBGPanel = new javax.swing.JPanel();
        configTopPanel = new javax.swing.JPanel();
        configTopLabel = new javax.swing.JLabel();
        configBackLabel = new javax.swing.JLabel();
        configIns1Label = new javax.swing.JLabel();
        configButton1Label = new javax.swing.JLabel();
        configIns2Label = new javax.swing.JLabel();
        configButton2Label = new javax.swing.JLabel();
        configIns3Label = new javax.swing.JLabel();
        configButton3Label = new javax.swing.JLabel();
        welcomePanel = new javax.swing.JPanel();
        wcTopPanel = new javax.swing.JPanel();
        wcTopLabel = new javax.swing.JLabel();
        citySelectorComboBox = new javax.swing.JComboBox<>();
        wcInsLabel = new javax.swing.JLabel();
        selectCityLabel = new javax.swing.JLabel();

        loadBackgroundPanel.setBackground(java.awt.Color.orange);

        loadHeaderPanel.setBackground(java.awt.Color.black);
        loadHeaderPanel.setMinimumSize(new java.awt.Dimension(763, 549));

        loadTitleLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        loadTitleLabel.setForeground(java.awt.Color.orange);
        loadTitleLabel.setText("Cargar Grafo");

        loadBackLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sources/left-arrow_1.png"))); // NOI18N
        loadBackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadBackLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout loadHeaderPanelLayout = new javax.swing.GroupLayout(loadHeaderPanel);
        loadHeaderPanel.setLayout(loadHeaderPanelLayout);
        loadHeaderPanelLayout.setHorizontalGroup(
            loadHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadHeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadBackLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loadHeaderPanelLayout.setVerticalGroup(
            loadHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadHeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadBackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        loadInsLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loadInsLabel.setText("Seleccione");

        finalLoadPanel.setBackground(java.awt.Color.orange);

        verticesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "X", "Y", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        verticesTable.setOpaque(false);
        verticesScrollPane.setViewportView(verticesTable);

        aristasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "inicio", "fin", "distancia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        aristasScrollPane.setViewportView(aristasTable);

        tableTitle1Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableTitle1Label.setText("Vertices");

        tableTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableTitle2Label.setText("Aristas");

        drawLoadGLabel.setBackground(new java.awt.Color(0, 0, 0));
        drawLoadGLabel.setForeground(java.awt.Color.orange);
        drawLoadGLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        drawLoadGLabel.setText("dibujar");
        drawLoadGLabel.setOpaque(true);
        drawLoadGLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drawLoadGLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                drawLoadGLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                drawLoadGLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout finalLoadPanelLayout = new javax.swing.GroupLayout(finalLoadPanel);
        finalLoadPanel.setLayout(finalLoadPanelLayout);
        finalLoadPanelLayout.setHorizontalGroup(
            finalLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalLoadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(finalLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableTitle1Label)
                    .addComponent(tableTitle2Label)
                    .addGroup(finalLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(verticesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                        .addComponent(aristasScrollPane))
                    .addComponent(drawLoadGLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        finalLoadPanelLayout.setVerticalGroup(
            finalLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalLoadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableTitle1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verticesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tableTitle2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aristasScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(drawLoadGLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        filesComboBox.setMaximumRowCount(1999);
        filesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "first" }));

        loadBuscarArchivoLabel.setBackground(java.awt.Color.black);
        loadBuscarArchivoLabel.setForeground(java.awt.Color.orange);
        loadBuscarArchivoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadBuscarArchivoLabel.setText("Buscar");
        loadBuscarArchivoLabel.setOpaque(true);
        loadBuscarArchivoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadBuscarArchivoLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loadBuscarArchivoLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loadBuscarArchivoLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout loadBackgroundPanelLayout = new javax.swing.GroupLayout(loadBackgroundPanel);
        loadBackgroundPanel.setLayout(loadBackgroundPanelLayout);
        loadBackgroundPanelLayout.setHorizontalGroup(
            loadBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadHeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(loadBackgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(finalLoadPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(loadBackgroundPanelLayout.createSequentialGroup()
                        .addComponent(loadInsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadBuscarArchivoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                        .addGap(334, 334, 334)))
                .addContainerGap())
        );
        loadBackgroundPanelLayout.setVerticalGroup(
            loadBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadBackgroundPanelLayout.createSequentialGroup()
                .addComponent(loadHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(loadBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loadInsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filesComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(loadBuscarArchivoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(finalLoadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loadFrameLayout = new javax.swing.GroupLayout(loadFrame.getContentPane());
        loadFrame.getContentPane().setLayout(loadFrameLayout);
        loadFrameLayout.setHorizontalGroup(
            loadFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadBackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        loadFrameLayout.setVerticalGroup(
            loadFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadBackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        saveBackGroundPanel.setBackground(java.awt.Color.orange);

        saveHeaderPanel.setBackground(new java.awt.Color(0, 0, 0));

        saveTitleLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        saveTitleLabel.setForeground(java.awt.Color.orange);
        saveTitleLabel.setText("Guardar grafo ");

        saveBackLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sources/left-arrow_1.png"))); // NOI18N
        saveBackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBackLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout saveHeaderPanelLayout = new javax.swing.GroupLayout(saveHeaderPanel);
        saveHeaderPanel.setLayout(saveHeaderPanelLayout);
        saveHeaderPanelLayout.setHorizontalGroup(
            saveHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveHeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveBackLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveTitleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        saveHeaderPanelLayout.setVerticalGroup(
            saveHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveHeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(saveHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveBackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        saveInsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        saveInsLabel.setText("Nombre del archivo: ");

        saveLabel.setBackground(new java.awt.Color(0, 0, 0));
        saveLabel.setForeground(java.awt.Color.orange);
        saveLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveLabel.setText("guadar");
        saveLabel.setOpaque(true);
        saveLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveLabelMouseExited(evt);
            }
        });

        saveMsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveMsLabel.setText("Los archivos se guardan en la ubicaci√≥n del proyecto (src/Files/...)");

        saveAvisoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout saveBackGroundPanelLayout = new javax.swing.GroupLayout(saveBackGroundPanel);
        saveBackGroundPanel.setLayout(saveBackGroundPanelLayout);
        saveBackGroundPanelLayout.setHorizontalGroup(
            saveBackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveHeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(saveBackGroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(saveBackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveMsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(saveBackGroundPanelLayout.createSequentialGroup()
                        .addComponent(saveInsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(saveAvisoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        saveBackGroundPanelLayout.setVerticalGroup(
            saveBackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveBackGroundPanelLayout.createSequentialGroup()
                .addComponent(saveHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(saveBackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveInsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(saveAvisoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saveMsLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout saveFrameLayout = new javax.swing.GroupLayout(saveFrame.getContentPane());
        saveFrame.getContentPane().setLayout(saveFrameLayout);
        saveFrameLayout.setHorizontalGroup(
            saveFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveBackGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        saveFrameLayout.setVerticalGroup(
            saveFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveBackGroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        mainFrame.setMinimumSize(new java.awt.Dimension(1200, 674));

        backGroundPanel.setBackground(java.awt.Color.orange);
        backGroundPanel.setMinimumSize(new java.awt.Dimension(1200, 674));

        topBarPanel.setBackground(java.awt.Color.black);
        topBarPanel.setMinimumSize(new java.awt.Dimension(1200, 68));

        allOptionsPanel.setBackground(java.awt.Color.orange);
        allOptionsPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        allOptionsPanel.setMinimumSize(new java.awt.Dimension(0, 68));
        allOptionsPanel.setOpaque(false);

        arrowLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arrowLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sources/right-arrow.png"))); // NOI18N
        arrowLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arrowLabelMouseClicked(evt);
            }
        });

        optionsPanel.setOpaque(false);

        removeAristaLabel.setBackground(java.awt.Color.orange);
        removeAristaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeAristaLabel.setText("Eliminar arista");
        removeAristaLabel.setOpaque(true);
        removeAristaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeAristaLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeAristaLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeAristaLabelMouseExited(evt);
            }
        });

        addAristaLabel.setBackground(java.awt.Color.orange);
        addAristaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addAristaLabel.setText("Agregar arista");
        addAristaLabel.setOpaque(true);
        addAristaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAristaLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addAristaLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addAristaLabelMouseExited(evt);
            }
        });

        removeVerticeLabel.setBackground(java.awt.Color.orange);
        removeVerticeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeVerticeLabel.setText("Eliminar vertice");
        removeVerticeLabel.setOpaque(true);
        removeVerticeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeVerticeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeVerticeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeVerticeLabelMouseExited(evt);
            }
        });

        addVerticeLabel.setBackground(java.awt.Color.orange);
        addVerticeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addVerticeLabel.setText("Agregar vertice");
        addVerticeLabel.setOpaque(true);
        addVerticeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addVerticeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addVerticeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addVerticeLabelMouseExited(evt);
            }
        });

        aemLabel.setBackground(java.awt.Color.orange);
        aemLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aemLabel.setText("A.E.M");
        aemLabel.setOpaque(true);
        aemLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aemLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aemLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aemLabelMouseExited(evt);
            }
        });

        guardarGrafoLabel.setBackground(java.awt.Color.orange);
        guardarGrafoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guardarGrafoLabel.setText("Guardar Grafo");
        guardarGrafoLabel.setOpaque(true);
        guardarGrafoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarGrafoLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarGrafoLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarGrafoLabelMouseExited(evt);
            }
        });

        cargarGrafoLabel.setBackground(java.awt.Color.orange);
        cargarGrafoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cargarGrafoLabel.setText("Cargar Grafo");
        cargarGrafoLabel.setOpaque(true);
        cargarGrafoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarGrafoLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cargarGrafoLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cargarGrafoLabelMouseExited(evt);
            }
        });

        addPanel.setBackground(java.awt.Color.orange);

        entradaTextField.setBackground(new java.awt.Color(0, 0, 0));
        entradaTextField.setForeground(new java.awt.Color(255, 255, 255));
        entradaTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entradaTextFieldKeyTyped(evt);
            }
        });

        opAvisoLabel.setText("Ingrese nombre del vertice:");

        inLabel.setBackground(java.awt.Color.orange);
        inLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inLabel.setText("Aceptar");
        inLabel.setOpaque(true);
        inLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opAvisoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(entradaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(opAvisoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(entradaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(inLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        configPanel.setOpaque(false);

        configLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        configLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sources/settings.png"))); // NOI18N
        configLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                configLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                configLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanelLayout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(configLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        aemPanel.setOpaque(false);

        kruskalLabel.setBackground(java.awt.Color.orange);
        kruskalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kruskalLabel.setText("Kruskal");
        kruskalLabel.setOpaque(true);
        kruskalLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kruskalLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                kruskalLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                kruskalLabelMouseExited(evt);
            }
        });

        primLabel.setBackground(java.awt.Color.orange);
        primLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        primLabel.setText("PRIM");
        primLabel.setOpaque(true);
        primLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                primLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                primLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                primLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout aemPanelLayout = new javax.swing.GroupLayout(aemPanel);
        aemPanel.setLayout(aemPanelLayout);
        aemPanelLayout.setHorizontalGroup(
            aemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kruskalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(primLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        aemPanelLayout.setVerticalGroup(
            aemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aemPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(aemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kruskalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(primLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addComponent(addVerticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addAristaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeVerticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeAristaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardarGrafoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargarGrafoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(configPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVerticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addAristaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeVerticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeAristaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarGrafoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargarGrafoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(configPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout allOptionsPanelLayout = new javax.swing.GroupLayout(allOptionsPanel);
        allOptionsPanel.setLayout(allOptionsPanelLayout);
        allOptionsPanelLayout.setHorizontalGroup(
            allOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(arrowLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        allOptionsPanelLayout.setVerticalGroup(
            allOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, allOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(arrowLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(allOptionsPanelLayout.createSequentialGroup()
                .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mensajeScrollPane.setBorder(null);
        mensajeScrollPane.setOpaque(false);

        mensajeLabel.setBackground(new java.awt.Color(0, 0, 0));
        mensajeLabel.setForeground(new java.awt.Color(255, 255, 255));
        mensajeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mensajeLabel.setOpaque(true);
        mensajeScrollPane.setViewportView(mensajeLabel);

        javax.swing.GroupLayout topBarPanelLayout = new javax.swing.GroupLayout(topBarPanel);
        topBarPanel.setLayout(topBarPanelLayout);
        topBarPanelLayout.setHorizontalGroup(
            topBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBarPanelLayout.createSequentialGroup()
                .addComponent(allOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mensajeScrollPane)
                .addContainerGap())
        );
        topBarPanelLayout.setVerticalGroup(
            topBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(allOptionsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(topBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mensajeScrollPane)
                .addContainerGap())
        );

        mapPanel.setBackground(java.awt.Color.white);
        mapPanel.setMinimumSize(new java.awt.Dimension(1200, 600));
        mapPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout backGroundPanelLayout = new javax.swing.GroupLayout(backGroundPanel);
        backGroundPanel.setLayout(backGroundPanelLayout);
        backGroundPanelLayout.setHorizontalGroup(
            backGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backGroundPanelLayout.setVerticalGroup(
            backGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backGroundPanelLayout.createSequentialGroup()
                .addComponent(topBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainFrameLayout = new javax.swing.GroupLayout(mainFrame.getContentPane());
        mainFrame.getContentPane().setLayout(mainFrameLayout);
        mainFrameLayout.setHorizontalGroup(
            mainFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainFrameLayout.setVerticalGroup(
            mainFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        configBGPanel.setBackground(java.awt.Color.orange);

        configTopPanel.setBackground(java.awt.Color.black);

        configTopLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        configTopLabel.setForeground(java.awt.Color.orange);
        configTopLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        configTopLabel.setText("Configuraci√≥n");

        configBackLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sources/left-arrow_1.png"))); // NOI18N
        configBackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configBackLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout configTopPanelLayout = new javax.swing.GroupLayout(configTopPanel);
        configTopPanel.setLayout(configTopPanelLayout);
        configTopPanelLayout.setHorizontalGroup(
            configTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(configBackLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configTopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configTopPanelLayout.setVerticalGroup(
            configTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configTopPanelLayout.createSequentialGroup()
                        .addComponent(configTopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(configBackLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        configIns1Label.setText("Deteccion Automatica de distancia entre vertices");

        configButton1Label.setBackground(java.awt.Color.black);
        configButton1Label.setForeground(java.awt.Color.orange);
        configButton1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        configButton1Label.setText("Desactivado");
        configButton1Label.setOpaque(true);
        configButton1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configButton1LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                configButton1LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                configButton1LabelMouseExited(evt);
            }
        });

        configIns2Label.setText("Mostrar distancia de aristas en pantalla");

        configButton2Label.setBackground(java.awt.Color.black);
        configButton2Label.setForeground(java.awt.Color.orange);
        configButton2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        configButton2Label.setText("Activado");
        configButton2Label.setOpaque(true);
        configButton2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configButton2LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                configButton2LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                configButton2LabelMouseExited(evt);
            }
        });

        configIns3Label.setText("Borrar grafo actual");

        configButton3Label.setBackground(java.awt.Color.black);
        configButton3Label.setForeground(java.awt.Color.orange);
        configButton3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        configButton3Label.setText("Borrar");
        configButton3Label.setOpaque(true);
        configButton3Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configButton3LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                configButton3LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                configButton3LabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout configBGPanelLayout = new javax.swing.GroupLayout(configBGPanel);
        configBGPanel.setLayout(configBGPanelLayout);
        configBGPanelLayout.setHorizontalGroup(
            configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configTopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(configBGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(configIns3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(configIns2Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(configIns1Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                .addGroup(configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configBGPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(configButton1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configBGPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(configButton3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(configButton2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configBGPanelLayout.setVerticalGroup(
            configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configBGPanelLayout.createSequentialGroup()
                .addComponent(configTopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configIns1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(configButton1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configIns2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(configButton2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configIns3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(configButton3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout configFrameLayout = new javax.swing.GroupLayout(configFrame.getContentPane());
        configFrame.getContentPane().setLayout(configFrameLayout);
        configFrameLayout.setHorizontalGroup(
            configFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        configFrameLayout.setVerticalGroup(
            configFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomePanel.setBackground(java.awt.Color.orange);

        wcTopPanel.setBackground(new java.awt.Color(0, 0, 0));

        wcTopLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        wcTopLabel.setForeground(java.awt.Color.orange);
        wcTopLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wcTopLabel.setText("Bienvenido");

        javax.swing.GroupLayout wcTopPanelLayout = new javax.swing.GroupLayout(wcTopPanel);
        wcTopPanel.setLayout(wcTopPanelLayout);
        wcTopPanelLayout.setHorizontalGroup(
            wcTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wcTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wcTopLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        wcTopPanelLayout.setVerticalGroup(
            wcTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wcTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wcTopLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        citySelectorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Barranquilla", "Fundaci√≥n", "Nueva York", "Praga", "Tokyo" }));

        wcInsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wcInsLabel.setText("Elija destino:");

        selectCityLabel.setBackground(new java.awt.Color(0, 0, 0));
        selectCityLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectCityLabel.setForeground(java.awt.Color.orange);
        selectCityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectCityLabel.setText("buscar recorridos");
        selectCityLabel.setOpaque(true);
        selectCityLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectCityLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selectCityLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectCityLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wcTopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wcInsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(citySelectorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectCityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addComponent(wcTopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(citySelectorComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(wcInsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectCityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(251, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(welcomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(welcomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadBuscarArchivoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadBuscarArchivoLabelMouseClicked
        // TODO add your handling code here:
        finalLoadPanel.setVisible(true);
        DefaultTableModel modelV = (DefaultTableModel) verticesTable.getModel();
        DefaultTableModel modelA = (DefaultTableModel) aristasTable.getModel();
        modelV.setRowCount(0);
        modelA.setRowCount(0);
        File file = new File("src/Files/"+filesComboBox.getSelectedItem().toString()+".txt");
        try(Scanner lector = new Scanner(file)){
            while(lector.hasNextLine()){

                String linea = lector.nextLine();
                String[] datos = linea.split(",");

                int a = Integer.parseInt(datos[0]);
                int b = Integer.parseInt(datos[1]);
                if(datos.length==4){
                    int c = Integer.parseInt(datos[2]);
                    String d = datos[3];
                    modelV.addRow(new Object[]{a,b,c,d});
                }else {
                    double c = Double.parseDouble(datos[2]);
                    modelA.addRow(new Object[]{a, b, c});
                }
            }
        }catch (Exception e){

        }
    }//GEN-LAST:event_loadBuscarArchivoLabelMouseClicked

    private void loadBuscarArchivoLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadBuscarArchivoLabelMouseEntered
        // TODO add your handling code here:
        loadBuscarArchivoLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_loadBuscarArchivoLabelMouseEntered

    private void loadBuscarArchivoLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadBuscarArchivoLabelMouseExited
        // TODO add your handling code here:
        loadBuscarArchivoLabel.setForeground(background);
    }//GEN-LAST:event_loadBuscarArchivoLabelMouseExited

    private void drawLoadGLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawLoadGLabelMouseClicked
        // TODO add your handling code here:
        String path = (filesComboBox.getSelectedItem().toString());
        graph.cargarGrafo(path);
        loadFrame.setVisible(false);
    }//GEN-LAST:event_drawLoadGLabelMouseClicked

    private void drawLoadGLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawLoadGLabelMouseEntered
        // TODO add your handling code here:
        drawLoadGLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_drawLoadGLabelMouseEntered

    private void drawLoadGLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawLoadGLabelMouseExited
        // TODO add your handling code here:
        drawLoadGLabel.setForeground(background);
    }//GEN-LAST:event_drawLoadGLabelMouseExited

    private void saveLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveLabelMouseClicked
        // TODO add your handling code here:
        String str = saveTextField.getText();
        if(str.length()>0 && graph.hasVertices()){
            if(isnewFile(str)){
                saveFile(str);
                swGuardar = 0;
                saveTextField.setText("");
                saveFrame.setVisible(false);
            }else {
                if(swGuardar==1){
                    saveFile(str);
                    swGuardar = 0;
                    saveTextField.setText("");
                    saveFrame.setVisible(false);
                }else {
                    swGuardar=1;
                    saveAvisoLabel.setText("Ya existe un archivo con ese nombre, si desea sobreeescribirlo?");
                }
            }
        }else {
            if(str.length()>0){
                saveAvisoLabel.setText("No hay vertices en el grafo");
            }else {
                saveAvisoLabel.setText("Ingrese nombre valido");
            }
            
        }
    }//GEN-LAST:event_saveLabelMouseClicked

    private void saveLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveLabelMouseEntered
        // TODO add your handling code here:
        saveLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_saveLabelMouseEntered

    private void saveLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveLabelMouseExited
        // TODO add your handling code here:
        saveLabel.setForeground(background);
    }//GEN-LAST:event_saveLabelMouseExited

    private void arrowLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arrowLabelMouseClicked
        // TODO add your handling code here:
        normalizar();
        if(!mostrarAllOptions){
            mostrarAllOptions=true;
            arrowLabel.setIcon(leftArrow);
            optionsPanel.setVisible(mostrarAllOptions);
            addPanel.setVisible(false);
            aemPanel.setVisible(false);
            allOptionsPanel.setOpaque(mostrarAllOptions);
        }else {
            mostrarAllOptions=false;
            arrowLabel.setIcon(rightArrow);
            mensajeLabel.setText("");
            optionsPanel.setVisible(mostrarAllOptions);
            addPanel.setVisible(false);
            aemPanel.setVisible(false);
            allOptionsPanel.setOpaque(mostrarAllOptions);
        }
    }//GEN-LAST:event_arrowLabelMouseClicked

    private void removeAristaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAristaLabelMouseClicked
        // TODO add your handling code here:
        normalizar();
        if(graph.hasEdges()){
            opc=3;
            mensaje("Haga clic sobre los vertices que conectan la arista a eliminar");
        } else{
            mensaje("no hay aristas");
        }  
        addPanel.setVisible(false);
        aemPanel.setVisible(false);
    }//GEN-LAST:event_removeAristaLabelMouseClicked

    private void removeAristaLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAristaLabelMouseEntered
        // TODO add your handling code here:
        removeAristaLabel.setBackground(Color.BLACK);
        removeAristaLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_removeAristaLabelMouseEntered

    private void removeAristaLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAristaLabelMouseExited
        // TODO add your handling code here:
        removeAristaLabel.setBackground(background);
        removeAristaLabel.setForeground(foreground);
    }//GEN-LAST:event_removeAristaLabelMouseExited

    private void addAristaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAristaLabelMouseClicked
        // TODO add your handling code here:
        addPanel.setVisible(false);
        aemPanel.setVisible(false); 
        normalizar();
        if(graph.canAddEdge()){
            entradaTextField.setText("");
            if(distanciaAuto){
                opc=5;
                opAvisoLabel.setText("");
                mensaje("Seleccione los vertices adyacentes a la arista");
            }else {
                opc=1;
                opAvisoLabel.setText("ingrese distancia (peso) de la arista");
                addPanel.setVisible(true);
            }
        }else {
            mensaje("no hay suficientes vertices para agregar la arista");
        }
    }//GEN-LAST:event_addAristaLabelMouseClicked

    private void addAristaLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAristaLabelMouseEntered
        // TODO add your handling code here:
        addAristaLabel.setBackground(Color.BLACK);
        addAristaLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_addAristaLabelMouseEntered

    private void addAristaLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAristaLabelMouseExited
        // TODO add your handling code here:
        addAristaLabel.setBackground(background);
        addAristaLabel.setForeground(foreground);
    }//GEN-LAST:event_addAristaLabelMouseExited

    private void removeVerticeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeVerticeLabelMouseClicked
        // TODO add your handling code here:
        addPanel.setVisible(false);
        aemPanel.setVisible(false); 
        normalizar();
        if(graph.hasVertices()){
            opc=2;
            mensaje("Haga clic sobre el vertice a eliminar");
        } else{
            mensaje("no hay vertices");
        } 
    }//GEN-LAST:event_removeVerticeLabelMouseClicked

    private void removeVerticeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeVerticeLabelMouseEntered
        // TODO add your handling code here:
        removeVerticeLabel.setBackground(Color.BLACK);
        removeVerticeLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_removeVerticeLabelMouseEntered

    private void removeVerticeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeVerticeLabelMouseExited
        // TODO add your handling code here:
        removeVerticeLabel.setBackground(background);
        removeVerticeLabel.setForeground(foreground);
    }//GEN-LAST:event_removeVerticeLabelMouseExited

    private void addVerticeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addVerticeLabelMouseClicked
        // TODO add your handling code here:
        normalizar();
        opc=0;
        entradaTextField.setText("");
        opAvisoLabel.setText("ingrese nombre del vertice:");
        aemPanel.setVisible(false);
        addPanel.setVisible(true);
    }//GEN-LAST:event_addVerticeLabelMouseClicked

    private void addVerticeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addVerticeLabelMouseEntered
        // TODO add your handling code here:
        addVerticeLabel.setBackground(Color.BLACK);
        addVerticeLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_addVerticeLabelMouseEntered

    private void addVerticeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addVerticeLabelMouseExited
        // TODO add your handling code here:
        addVerticeLabel.setBackground(background);
        addVerticeLabel.setForeground(foreground);
    }//GEN-LAST:event_addVerticeLabelMouseExited

    private void aemLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aemLabelMouseClicked
        // TODO add your handling code here:
        normalizar();
        addPanel.setVisible(false);
        aemPanel.setVisible(true);
    }//GEN-LAST:event_aemLabelMouseClicked

    private void aemLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aemLabelMouseEntered
        // TODO add your handling code here:
        aemLabel.setBackground(Color.BLACK);
        aemLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_aemLabelMouseEntered

    private void aemLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aemLabelMouseExited
        // TODO add your handling code here:
        aemLabel.setBackground(background);
        aemLabel.setForeground(foreground);
    }//GEN-LAST:event_aemLabelMouseExited

    private void guardarGrafoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarGrafoLabelMouseClicked
        // TODO add your handling code here:
        normalizar();
        addPanel.setVisible(false);
        aemPanel.setVisible(false);
        swGuardar = 0;
        saveTextField.setText("");
        saveFrame.setVisible(true);
    }//GEN-LAST:event_guardarGrafoLabelMouseClicked

    private void guardarGrafoLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarGrafoLabelMouseEntered
        // TODO add your handling code here:
        guardarGrafoLabel.setBackground(Color.BLACK);
        guardarGrafoLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_guardarGrafoLabelMouseEntered

    private void guardarGrafoLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarGrafoLabelMouseExited
        // TODO add your handling code here:
        guardarGrafoLabel.setBackground(background);
        guardarGrafoLabel.setForeground(foreground);
    }//GEN-LAST:event_guardarGrafoLabelMouseExited

    private void cargarGrafoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarGrafoLabelMouseClicked
        // TODO add your handling code here:
        normalizar();
        addPanel.setVisible(false);
        aemPanel.setVisible(false);
        loadFrame.setVisible(true);
        finalLoadPanel.setVisible(false);
        DefaultTableModel modelV = (DefaultTableModel) verticesTable.getModel();
        DefaultTableModel modelA = (DefaultTableModel) aristasTable.getModel();
        modelV.setRowCount(0);
        modelA.setRowCount(0);
        cBSavedFiles();
    }//GEN-LAST:event_cargarGrafoLabelMouseClicked

    private void cargarGrafoLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarGrafoLabelMouseEntered
        // TODO add your handling code here:
        cargarGrafoLabel.setBackground(Color.BLACK);
        cargarGrafoLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_cargarGrafoLabelMouseEntered

    private void cargarGrafoLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarGrafoLabelMouseExited
        // TODO add your handling code here:
        cargarGrafoLabel.setBackground(background);
        cargarGrafoLabel.setForeground(foreground);
    }//GEN-LAST:event_cargarGrafoLabelMouseExited

    private void entradaTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entradaTextFieldKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(opc==1){
            if ((c<'0' || c>'9')) evt.consume(); 
        }
    }//GEN-LAST:event_entradaTextFieldKeyTyped

    private void inLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inLabelMouseClicked
        // TODO add your handling code here:
        p1=null;
        p2=null;
        if(entradaTextField.getText().length()>0){
            if(opc==0){
                en0 = entradaTextField.getText();
                opc=4;
                mensaje("haga clic en el mapa para agregar el vertice en la posici√≥n que desee");
                entradaTextField.setText("");
            }else {
                if(opc==1){
                    try{
                        en1 = Integer.parseInt(entradaTextField.getText());
                        opc=5;
                        entradaTextField.setText("");
                        mensaje("Seleccione los vertices adyacentes a la arista");
                    }catch (NumberFormatException e){
                        mensaje("Ingrese numero correctamente");
                    }
                } 
            }
        }else {
            mensaje("ingrese correctamente los datos");
        }
    }//GEN-LAST:event_inLabelMouseClicked

    private void inLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inLabelMouseEntered
        // TODO add your handling code here:
        inLabel.setBackground(Color.BLACK);
        inLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_inLabelMouseEntered

    private void inLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inLabelMouseExited
        // TODO add your handling code here:
        inLabel.setBackground(background);
        inLabel.setForeground(foreground);
    }//GEN-LAST:event_inLabelMouseExited

    private void kruskalLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kruskalLabelMouseClicked
        // TODO add your handling code here:
        ArrayList<Arista> AEM = graph.kruskal();
        if(!AEM.isEmpty()){
            Rectangle ven = mapPanel.getBounds();
            Graphics g = mapPanel.getGraphics();
            double suma =0;
            String info = "Kruskal--> ";
            for (Arista arista : AEM) {
                info += "Arista: ("+arista.getInicio().getNombre()+","+arista.getFin().getNombre()+") costo: ";
                String str = Double.toString(arista.getDistancia());
                str = str.substring(0, str.indexOf(".")+2);
                info += str+"| \n";
                suma += arista.getDistancia();
                arista.pintar(g, Color.RED,mostrarDistancias);
            }
            info += "Distancia m√≠nima total: "+suma+" mts";
            mensaje(info);
        }
        aemPanel.setVisible(false);
    }//GEN-LAST:event_kruskalLabelMouseClicked

    private void kruskalLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kruskalLabelMouseEntered
        // TODO add your handling code here:
        kruskalLabel.setBackground(Color.BLACK);
        kruskalLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_kruskalLabelMouseEntered

    private void kruskalLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kruskalLabelMouseExited
        // TODO add your handling code here:
        kruskalLabel.setBackground(background);
        kruskalLabel.setForeground(foreground);
    }//GEN-LAST:event_kruskalLabelMouseExited

    private void primLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_primLabelMouseClicked
        // TODO add your handling code here:
        addPanel.setVisible(false);
        aemPanel.setVisible(false); 
        normalizar();
        if(graph.hasEdges()){
            opc=6;
            mensaje("Haga clic sobre el vertice inicial para realizar PRIM");
        }else {
            mensaje("No hay aristas");
        }
    }//GEN-LAST:event_primLabelMouseClicked

    private void primLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_primLabelMouseEntered
        // TODO add your handling code here:
        primLabel.setBackground(Color.BLACK);
        primLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_primLabelMouseEntered

    private void primLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_primLabelMouseExited
        // TODO add your handling code here:
        primLabel.setBackground(background);
        primLabel.setForeground(foreground);
    }//GEN-LAST:event_primLabelMouseExited

    private void mapPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapPanelMouseClicked
        // TODO add your handling code here:
        int opcion = opc;
        if (opcion==4){ //a√±adir vertice
            graph.addVertice(evt.getX(), evt.getY(), en0);
            dibujar();
            opc=0;
        } 
        if(opcion==5){  //a√±adir arista
            if (p1 == null) {
                p1 = graph.getVertice(evt.getPoint());
                p1.setColor(Color.RED);
                dibujar();
            } else {
                Vertice vertice = graph.getVertice(evt.getPoint());
                if (vertice.getColor() != Color.RED){
                    p2 = vertice;
                    double peso;
                    if(distanciaAuto){
                        int x1 = p1.getX()+(Vertice.getD()/2);
                        int y1 = p1.getY()+(Vertice.getD()/2);
                        int x2 = p2.getX()+(Vertice.getD()/2);
                        int y2 = p2.getY()+(Vertice.getD()/2);
                        peso = Point.distance(x1, y1, x2, y2)*escala;
                        opc=5;
                    }else {
                        peso = en1;
                        opc=1;
                    }
                    graph.addArista(p1, p2, peso);
                    p1 = null;
                    p2 = null;
                    graph.setVerticesBlack();
                    dibujar();
                }
            }
        }
        if(opcion==2){ //borrar vertice     
            if(p1==null){
                graph.borrarVertice(graph.getVertice(evt.getPoint()));
                dibujar();
            }
        }
        if(opcion==3){  //borrar arista
            if (p1 == null) {
                p1 = graph.getVertice(evt.getPoint());
                p1.setColor(Color.RED);
                dibujar();
            } else {
                Vertice vertice = graph.getVertice(evt.getPoint());
                if (vertice.getColor() != Color.RED){
                    p2=vertice;
                    graph.borrarArrista(p1, p2);
                    p1 = null;
                    p2 = null;
                    graph.setVerticesBlack();
                    dibujar();
                }
            }
        }
        if(opcion==6){   //PRIM
            Vertice vertice = graph.getVertice(evt.getPoint());
            if (p1 == null) {
                p1 = vertice;
                p1.setColor(Color.RED);
                ArrayList<Arista> AEM = graph.PRIM(p1);
                if(!AEM.isEmpty()){
                    Rectangle ven = mapPanel.getBounds();
                    Graphics g = mapPanel.getGraphics();
                    double suma =0;
                    String info = "PRIM--> ";
                    dibujar();
                    for (Arista arista : AEM) {
                        info += "Arista: ("+arista.getInicio().getNombre()+","+arista.getFin().getNombre()+") costo: ";
                        String str = Double.toString(arista.getDistancia());
                        str = str.substring(0, str.indexOf(".")+2);
                        info += str+"| \n";
                        suma += arista.getDistancia();
                        arista.pintar(g, background,mostrarDistancias);
                    }
                    info += "Distancia m√≠nima total: "+suma+" mts";
                    mensaje(info);
                }
                aemPanel.setVisible(false);
                opc=-1;
            }
        }
    }//GEN-LAST:event_mapPanelMouseClicked

    private void selectCityLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectCityLabelMouseClicked
        // TODO add your handling code here:
        mainFrame.setVisible(true);
        mostrarAllOptions=false;
        arrowLabel.setIcon(rightArrow);
        mensajeLabel.setText("");
        optionsPanel.setVisible(mostrarAllOptions);
        addPanel.setVisible(false);
        aemPanel.setVisible(false);
        allOptionsPanel.setOpaque(mostrarAllOptions);
    }//GEN-LAST:event_selectCityLabelMouseClicked

    private void selectCityLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectCityLabelMouseEntered
        // TODO add your handling code here:
        selectCityLabel.setForeground(Color.WHITE);
    }//GEN-LAST:event_selectCityLabelMouseEntered

    private void selectCityLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectCityLabelMouseExited
        // TODO add your handling code here:
        selectCityLabel.setForeground(background);
    }//GEN-LAST:event_selectCityLabelMouseExited

    private void configLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configLabelMouseClicked
        // TODO add your handling code here:
        configFrame.setVisible(true);
    }//GEN-LAST:event_configLabelMouseClicked

    private void configLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configLabelMouseEntered
        // TODO add your handling code here:
        configLabel.setIcon(confiW);
    }//GEN-LAST:event_configLabelMouseEntered

    private void configLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configLabelMouseExited
        // TODO add your handling code here:
        configLabel.setIcon(confiB);
    }//GEN-LAST:event_configLabelMouseExited

    private void configButton1LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton1LabelMouseClicked
        // TODO add your handling code here:
        if(distanciaAuto){
            distanciaAuto=false;
            configButton1Label.setText("Desactivado");
        }else {
            distanciaAuto=true;
            configButton1Label.setText("Activado");
            addPanel.setVisible(false);
            int selMap = citySelectorComboBox.getSelectedIndex();
            if(selMap>1){
                escala = ((double) 1650/403);
            }else {
                escala = ((double) 100/11);
            }
        }
    }//GEN-LAST:event_configButton1LabelMouseClicked

    private void configButton1LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton1LabelMouseEntered
        // TODO add your handling code here:
        configButton1Label.setForeground(Color.WHITE);
    }//GEN-LAST:event_configButton1LabelMouseEntered

    private void configButton1LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton1LabelMouseExited
        // TODO add your handling code here:
        configButton1Label.setForeground(background);
    }//GEN-LAST:event_configButton1LabelMouseExited

    private void configButton2LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton2LabelMouseClicked
        // TODO add your handling code here:
        if(mostrarDistancias){
            mostrarDistancias=false;
            configButton2Label.setText("Desactivado");
        }else {
            mostrarDistancias=true;
            configButton2Label.setText("Activado");
        }
        normalizar();
    }//GEN-LAST:event_configButton2LabelMouseClicked

    private void configButton2LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton2LabelMouseEntered
        // TODO add your handling code here:
        configButton2Label.setForeground(Color.WHITE);
    }//GEN-LAST:event_configButton2LabelMouseEntered

    private void configButton2LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton2LabelMouseExited
        // TODO add your handling code here:
        configButton2Label.setForeground(background);
    }//GEN-LAST:event_configButton2LabelMouseExited

    private void configButton3LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton3LabelMouseClicked
        // TODO add your handling code here:
        graph= new GrafoG(this);
        normalizar();
    }//GEN-LAST:event_configButton3LabelMouseClicked

    private void configButton3LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton3LabelMouseEntered
        // TODO add your handling code here:
        configButton3Label.setForeground(Color.WHITE);
    }//GEN-LAST:event_configButton3LabelMouseEntered

    private void configButton3LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configButton3LabelMouseExited
        // TODO add your handling code here:
        configButton3Label.setForeground(background);
    }//GEN-LAST:event_configButton3LabelMouseExited

    private void configBackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configBackLabelMouseClicked
        // TODO add your handling code here:
        configFrame.setVisible(false);
    }//GEN-LAST:event_configBackLabelMouseClicked

    private void saveBackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBackLabelMouseClicked
        // TODO add your handling code here:
        swGuardar = 0;
        saveTextField.setText("");
        saveFrame.setVisible(false);
    }//GEN-LAST:event_saveBackLabelMouseClicked

    private void loadBackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadBackLabelMouseClicked
        // TODO add your handling code here:
        loadFrame.setVisible(false);
    }//GEN-LAST:event_loadBackLabelMouseClicked
    
    
    
    
    /**
     * Comprueba si el archivo ya existe en la base de datos del proyecto.
     * @param str: Nombre del archivo
     * @return true si no existe en la base de datos o falso si y solo si 
     * existe.
     */
    private boolean isnewFile(String str){
        try(Scanner lector = new Scanner(savedFiles)){
            while(lector.hasNextLine()){
                String linea = lector.nextLine();
                if(str.equals(linea)){
                    return false;
                }
            }
        }catch (Exception e){
        }
        return true;
    }
    
    
    /**
     * M√©todo para guardar nombre del nuevo archivo en la base de datos del 
     * proyecto.
     * @param str: nombre del archivo.
     */
    private void saveFile(String str){
        try( BufferedWriter bww = new BufferedWriter(new FileWriter(savedFiles, true));){
            if(isnewFile(str)){
                bww.newLine();
                bww.append(str);
                bww.close();
            }
            graph.guardarGrafo(str);
        }catch(Exception e){

        }
    }
    
    
    /**
     * Asignar nombres de archivos guardados a objeto filesComboBox
     */
    private void cBSavedFiles(){
        DefaultComboBoxModel modelcbp = (DefaultComboBoxModel) filesComboBox.getModel();
        modelcbp.removeAllElements();
        try(Scanner lector = new Scanner(savedFiles)){
            while(lector.hasNextLine()){
                String linea = lector.nextLine();
                modelcbp.addElement(linea);
            }
        }catch (Exception e){
        }
        filesComboBox.setModel(modelcbp);
    }
    
    
    
    
    
    /**
     * M√©todo para dibujar imagen en el Panel.
     */
    private void drawMap(){
        Rectangle ven = mapPanel.getBounds();
        int alto = ven.height;
        int ancho = ven.width;
        Graphics g = mapPanel.getGraphics();
        g.clearRect(ven.x, ven.y, ancho, alto);
        final BufferedImage image;
        String mapa = citySelectorComboBox.getSelectedItem().toString();
        try {
            image = ImageIO.read(new File("src/Sources/"+mapa+".png"));
            mapPanel.getGraphics().drawImage(image, 0, 0, null);
        } catch (IOException ex) {
            System.out.println("Imagen no se pudo cargar");
        }
    }
    
    
    /**
     * M√©todo para dibujar vertices y aristas en el Panel.
     */
    public void dibujar(){
        Rectangle ven = mapPanel.getBounds();
        int alto = ven.height;
        int ancho = ven.width;
        Graphics g = mapPanel.getGraphics();
        g.clearRect(ven.x, ven.y, ancho, alto);
        drawMap();
        graph.dibujarGrafo(g, Color.BLACK, mostrarDistancias);
    }
    
    
    /**
     * M√©todo que asigna los switches a su estado inicial y los colores de los
     * v√©rtices a su esstado inicial
     */
    private void normalizar(){
        opc=-1;
        p1=null;
        p2=null;
        graph.setVerticesBlack();
        dibujar();
    }
    
    
    /**
     * M√©todo que muestra en el mensajeLabel el mensaje que la aplicaci√≥n le 
     * comunica al usuario.
     * @param str String que se muestra en el objeto mensajeLabel.
     */
    public void mensaje(String str){
        mensajeLabel.setText(str);
    }
    
    /**
     * M√©todo para asignar los colores deseados a los elementos del Frame.
     * @param bg: Color, color de fondo.
     * @param fg Color, color de primer plano
     */
    private void cambiarColor(Color bg, Color fg){
        background=bg;
        foreground=fg;
        backGroundPanel.setBackground(bg);
        topBarPanel.setBackground(fg);
        mensajeLabel.setBackground(fg);
        mensajeLabel.setForeground(bg);
        allOptionsPanel.setBackground(bg);
        addPanel.setBackground(bg);
        addVerticeLabel.setBackground(bg);
        addVerticeLabel.setForeground(fg);
        addAristaLabel.setBackground(bg);
        addAristaLabel.setForeground(fg);
        removeVerticeLabel.setBackground(bg);
        removeVerticeLabel.setForeground(fg);
        removeAristaLabel.setBackground(bg);
        removeAristaLabel.setForeground(fg);
        aemLabel.setBackground(bg);
        aemLabel.setForeground(fg);
        guardarGrafoLabel.setBackground(bg);
        guardarGrafoLabel.setForeground(fg);
        cargarGrafoLabel.setBackground(bg);
        cargarGrafoLabel.setForeground(fg);
        kruskalLabel.setBackground(bg);
        kruskalLabel.setForeground(fg);
        primLabel.setBackground(bg);
        primLabel.setForeground(fg);
        inLabel.setBackground(bg);
        inLabel.setForeground(fg);
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Window().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addAristaLabel;
    private javax.swing.JPanel addPanel;
    private javax.swing.JLabel addVerticeLabel;
    private javax.swing.JLabel aemLabel;
    private javax.swing.JPanel aemPanel;
    private javax.swing.JPanel allOptionsPanel;
    private javax.swing.JScrollPane aristasScrollPane;
    private javax.swing.JTable aristasTable;
    private javax.swing.JLabel arrowLabel;
    private javax.swing.JPanel backGroundPanel;
    private javax.swing.JLabel cargarGrafoLabel;
    private javax.swing.JComboBox<String> citySelectorComboBox;
    private javax.swing.JPanel configBGPanel;
    private javax.swing.JLabel configBackLabel;
    private javax.swing.JLabel configButton1Label;
    private javax.swing.JLabel configButton2Label;
    private javax.swing.JLabel configButton3Label;
    private javax.swing.JFrame configFrame;
    private javax.swing.JLabel configIns1Label;
    private javax.swing.JLabel configIns2Label;
    private javax.swing.JLabel configIns3Label;
    private javax.swing.JLabel configLabel;
    private javax.swing.JPanel configPanel;
    private javax.swing.JLabel configTopLabel;
    private javax.swing.JPanel configTopPanel;
    private javax.swing.JLabel drawLoadGLabel;
    private javax.swing.JTextField entradaTextField;
    private javax.swing.JComboBox<String> filesComboBox;
    private javax.swing.JPanel finalLoadPanel;
    private javax.swing.JLabel guardarGrafoLabel;
    private javax.swing.JLabel inLabel;
    private javax.swing.JLabel kruskalLabel;
    private javax.swing.JLabel loadBackLabel;
    private javax.swing.JPanel loadBackgroundPanel;
    private javax.swing.JLabel loadBuscarArchivoLabel;
    private javax.swing.JFrame loadFrame;
    private javax.swing.JPanel loadHeaderPanel;
    private javax.swing.JLabel loadInsLabel;
    private javax.swing.JLabel loadTitleLabel;
    private javax.swing.JFrame mainFrame;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JLabel mensajeLabel;
    private javax.swing.JScrollPane mensajeScrollPane;
    private javax.swing.JLabel opAvisoLabel;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JLabel primLabel;
    private javax.swing.JLabel removeAristaLabel;
    private javax.swing.JLabel removeVerticeLabel;
    private javax.swing.JLabel saveAvisoLabel;
    private javax.swing.JPanel saveBackGroundPanel;
    private javax.swing.JLabel saveBackLabel;
    private javax.swing.JFrame saveFrame;
    private javax.swing.JPanel saveHeaderPanel;
    private javax.swing.JLabel saveInsLabel;
    private javax.swing.JLabel saveLabel;
    private javax.swing.JLabel saveMsLabel;
    private javax.swing.JTextField saveTextField;
    private javax.swing.JLabel saveTitleLabel;
    private javax.swing.JLabel selectCityLabel;
    private javax.swing.JLabel tableTitle1Label;
    private javax.swing.JLabel tableTitle2Label;
    private javax.swing.JPanel topBarPanel;
    private javax.swing.JScrollPane verticesScrollPane;
    private javax.swing.JTable verticesTable;
    private javax.swing.JLabel wcInsLabel;
    private javax.swing.JLabel wcTopLabel;
    private javax.swing.JPanel wcTopPanel;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables
}
